# 왼쪽부터 차례대로 식량창고를 털지 안털지를 결정하는 경우와 특정한 i번째 식량창고에 대해서 털지 안털지의 여부를 결정할 때, 2가지를 생각한다.
# 1. (i-1)번째 식량창고를 털기로 결정한 경우 현재의 식량창고를 털 수 없다.
# 2. (i-2)번째 식량창고를 털기로 결정한 경우 현재의 식량창고를 털 수 있다.
# 이 둘 중 더 많은 식량을 털 수 있는 경우 선택
import sys

n = int(sys.stdin.readline().rstrip())
k = list(map(int, sys.stdin.readline().rstrip().split()))

# 앞서 계산된 결과를 저장하기 위한 DP 테이블 초기화 (각 식량창고에 대한 것)
d = [0] * 100

# DP 보텀업
d[0] = k[0]
d[1] = max(k[0], k[1])  # 전거? 지금거?

for i in range(2, n):  # 0~n-1까지 n개에 대해 할거니
    d[i] = max(d[i-1], d[i-2]+k[i])  # 전거? 두개 전+지금거?

print(d[n-1])