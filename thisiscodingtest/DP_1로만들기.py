# 다시 풀기
# 이해가 잘 안됨

import sys
x = int(sys.stdin.readline().rstrip())

# 앞서 계산된 결과를 저장하기 위한 DP 테이블 초기화
d = [0] * 30001
# d[1]은 0인 것임 연산 횟수를 세는 것!

# 다이나믹 프로그래밍 진행 (보텀업)
for i in range(2, x + 1):
    d[i] = d[i-1] + 1  # 현재 수에서 1을 빼는 경우
    if i % 2 == 0:  # 현재의 수가 2로 나누어 떨어지는 경우
        d[i] = min(d[i], d[i // 2] + 1)
    if i % 3 == 0:  # 현재의 수가 3로 나누어 떨어지는 경우
        d[i] = min(d[i], d[i // 3] + 1)
    if i % 5 == 0:  # 현재의 수가 5로 나누어 떨어지는 경우
        d[i] = min(d[i], d[i // 5] + 1)

    # 반복문 한 텀이 다 돌았을 때 d[i]가 결정되는 것임. 연산 최소가 되도록.
    # d[*]에서 *가 작을수록 d[*]도 작을 확률이 높겠지

print(d[x])
